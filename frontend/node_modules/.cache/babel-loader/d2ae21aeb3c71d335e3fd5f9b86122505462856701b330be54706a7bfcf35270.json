{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import { Search, Heart, RefreshCw, Share2, Download, Moon, Sun, Plus, X, Copy, ArrowRight, Globe } from 'lucide-react';\n\n// // API service for backend communication\n// const API_BASE_URL = 'http://localhost:5000/api';\n\n// const QuoteApp = () => {\n//   const [quote, setQuote] = useState({ content: \"Life isn't about finding yourself. Life is about creating yourself.\", author: \"George Bernard Shaw\" });\n//   const [isMenuOpen, setIsMenuOpen] = useState(false);\n//   const [theme, setTheme] = useState('dark');\n//   const [activeTab, setActiveTab] = useState('discover');\n//   const [favorites, setFavorites] = useState([]);\n//   const [isAddingQuote, setIsAddingQuote] = useState(false);\n//   const [categories, setCategories] = useState(['Inspiration', 'Success', 'Love', 'Wisdom', 'Motivation']);\n//   const [showToast, setShowToast] = useState(false);\n//   const [toastMessage, setToastMessage] = useState('');\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [recommendedQuotes, setRecommendedQuotes] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [newQuote, setNewQuote] = useState({ content: '', author: '', category: '' });\n\n//   // Load categories from backend on mount\n//   useEffect(() => {\n//     fetchCategories();\n//     fetchRandomQuote();\n//     fetchRecommendedQuotes();\n//     // Load favorites from localStorage\n//     const savedFavorites = localStorage.getItem('favorites');\n//     if (savedFavorites) {\n//       setFavorites(JSON.parse(savedFavorites));\n//     }\n//   }, []);\n\n//   // Save favorites to localStorage whenever they change\n//   useEffect(() => {\n//     localStorage.setItem('favorites', JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/categories`);\n//       if (response.ok) {\n//         const data = await response.json();\n//         // Extract category names from the API response\n//         const categoryNames = Array.isArray(data) ? \n//           (typeof data[0] === 'string' ? data : data.map(cat => cat.name)) :\n//           ['Inspiration', 'Success', 'Love', 'Wisdom', 'Motivation'];\n//         setCategories(categoryNames);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching categories:', error);\n//     }\n//   };\n\n//   const fetchRandomQuote = async () => {\n//     setIsLoading(true);\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/random-quote`);\n//       if (response.ok) {\n//         const data = await response.json();\n//         setQuote(data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching random quote:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const fetchRecommendedQuotes = async () => {\n//     try {\n//       const promises = [1, 2, 3].map(() => fetch(`${API_BASE_URL}/random-quote`).then(res => res.json()));\n//       const results = await Promise.all(promises);\n//       setRecommendedQuotes(results);\n//     } catch (error) {\n//       console.error('Error fetching recommended quotes:', error);\n//     }\n//   };\n\n//   const searchQuotes = async () => {\n//     if (!searchQuery.trim()) return;\n\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/quote?author=${encodeURIComponent(searchQuery)}`);\n//       if (response.ok) {\n//         const data = await response.json();\n//         if (data && data.length > 0) {\n//           setQuote(data[0]);\n//           if (data.length > 1) {\n//             setRecommendedQuotes(data.slice(1, 4));\n//           }\n//           showToastNotification('Quote found');\n//         } else {\n//           showToastNotification('No quotes found for this author');\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error searching quotes:', error);\n//       showToastNotification('Error searching quotes');\n//     }\n//   };\n\n//   const addNewQuote = async () => {\n//     if (!newQuote.content || !newQuote.author) {\n//       showToastNotification('Quote and author are required');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/add-quote`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           content: newQuote.content,\n//           author: newQuote.author\n//         }),\n//       });\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         setQuote(data);\n//         showToastNotification('Quote added successfully');\n//         setIsAddingQuote(false);\n//         setNewQuote({ content: '', author: '', category: '' });\n//       } else {\n//         showToastNotification('Error adding quote');\n//       }\n//     } catch (error) {\n//       console.error('Error adding quote:', error);\n//       showToastNotification('Error connecting to server');\n//     }\n//   };\n\n//   const toggleTheme = () => {\n//     setTheme(theme === 'dark' ? 'light' : 'dark');\n//   };\n\n//   const toggleFavorite = (quoteObj) => {\n//     const exists = favorites.some(fav => fav.content === quoteObj.content);\n//     if (exists) {\n//       setFavorites(favorites.filter(fav => fav.content !== quoteObj.content));\n//       showToastNotification('Removed from favorites');\n//     } else {\n//       setFavorites([...favorites, quoteObj]);\n//       showToastNotification('Added to favorites');\n//     }\n//   };\n\n//   const randomizeQuote = () => {\n//     fetchRandomQuote();\n//   };\n\n//   const handleCategoryClick = async (category) => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/quotes/category/${category}`);\n//       if (response.ok) {\n//         const data = await response.json();\n//         if (data && data.length > 0) {\n//           setQuote(data[0]);\n//           if (data.length > 1) {\n//             setRecommendedQuotes(data.slice(1, 4));\n//           }\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error fetching quotes by category:', error);\n//     }\n//   };\n\n//   const showToastNotification = (message) => {\n//     setToastMessage(message);\n//     setShowToast(true);\n//     setTimeout(() => setShowToast(false), 2000);\n//   };\n\n//   const copyToClipboard = () => {\n//     navigator.clipboard.writeText(`\"${quote.content}\" - ${quote.author}`);\n//     showToastNotification('Quote copied to clipboard');\n//   };\n\n//   const handleSearchKeyPress = (e) => {\n//     if (e.key === 'Enter') {\n//       searchQuotes();\n//     }\n//   };\n\n//   return (\n//     <div className={`min-h-screen flex flex-col ${theme === 'dark' ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'}`}>\n//       {/* Animated Gradient Background */}\n//       <div className=\"fixed inset-0 pointer-events-none\">\n//         <div className={`absolute inset-0 opacity-10 ${theme === 'dark' ? 'opacity-20' : 'opacity-10'}`}>\n//           <div className=\"absolute top-0 -left-4 w-72 h-72 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\n//           <div className=\"absolute top-0 -right-4 w-72 h-72 bg-yellow-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\n//           <div className=\"absolute -bottom-8 left-20 w-72 h-72 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\n//         </div>\n//       </div>\n\n//       {/* Header */}\n//       <header className={`fixed w-full z-10 ${theme === 'dark' ? 'bg-gray-900/80' : 'bg-white/80'} backdrop-blur-md py-4 px-6 flex justify-between items-center`}>\n//         <div className=\"flex items-center space-x-2\">\n//           <motion.div \n//             initial={{ rotate: 0 }}\n//             animate={{ rotate: 360 }}\n//             transition={{ duration: 2, repeat: Infinity, repeatType: \"loop\", ease: \"linear\" }}\n//             className=\"h-8 w-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-600\"\n//           ></motion.div>\n//           <h1 className=\"text-xl font-bold bg-gradient-to-r from-blue-500 to-purple-600 bg-clip-text text-transparent\">Quotient</h1>\n//         </div>\n\n//         <div className=\"flex items-center space-x-4\">\n//           <button onClick={toggleTheme} className=\"p-2 rounded-full hover:bg-gray-800/20\">\n//             {theme === 'dark' ? <Sun size={20} /> : <Moon size={20} />}\n//           </button>\n\n//           <div \n//             onClick={() => setIsMenuOpen(!isMenuOpen)}\n//             className=\"relative h-10 w-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center cursor-pointer\"\n//           >\n//             <span className=\"text-white font-medium\">JD</span>\n//           </div>\n//         </div>\n//       </header>\n\n//       {/* Side Navigation */}\n//       <motion.div \n//         className={`fixed left-0 bottom-0 top-0 z-20 w-64 ${theme === 'dark' ? 'bg-gray-900/95' : 'bg-white/95'} backdrop-blur-md pt-20 px-4 shadow-xl`}\n//         initial={{ x: \"-100%\" }}\n//         animate={{ x: isMenuOpen ? 0 : \"-100%\" }}\n//         transition={{ type: \"spring\", damping: 20 }}\n//       >\n//         <button \n//           onClick={() => setIsMenuOpen(false)}\n//           className=\"absolute top-6 right-4 p-1 rounded-full hover:bg-gray-800/20\"\n//         >\n//           <X size={20} />\n//         </button>\n\n//         <div className=\"flex flex-col h-full\">\n//           <div className=\"space-y-1\">\n//             <button \n//               onClick={() => setActiveTab('discover')}\n//               className={`w-full py-2.5 px-4 text-left rounded-lg flex items-center space-x-3 ${activeTab === 'discover' ? 'bg-blue-500/10 text-blue-500' : 'hover:bg-gray-800/10'}`}\n//             >\n//               <Globe size={18} />\n//               <span>Discover</span>\n//             </button>\n//             <button \n//               onClick={() => setActiveTab('favorites')}\n//               className={`w-full py-2.5 px-4 text-left rounded-lg flex items-center space-x-3 ${activeTab === 'favorites' ? 'bg-blue-500/10 text-blue-500' : 'hover:bg-gray-800/10'}`}\n//             >\n//               <Heart size={18} />\n//               <span>Favorites</span>\n//             </button>\n//           </div>\n\n//           <div className=\"mt-8\">\n//             <h3 className=\"text-xs uppercase text-gray-500 font-semibold mb-2 px-4\">Categories</h3>\n//             <div className=\"space-y-1\">\n//               {categories.map((category, index) => (\n//                 <button \n//                   key={index}\n//                   onClick={() => handleCategoryClick(category)}\n//                   className=\"w-full py-2 px-4 text-left rounded-lg hover:bg-gray-800/10 text-sm\"\n//                 >\n//                   {category}\n//                 </button>\n//               ))}\n//             </div>\n//           </div>\n\n//           <div className=\"mt-auto pb-8\">\n//             <button \n//               onClick={() => setIsAddingQuote(true)}\n//               className=\"w-full py-2.5 px-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg text-white font-medium flex items-center justify-center space-x-2\"\n//             >\n//               <Plus size={18} />\n//               <span>Add Quote</span>\n//             </button>\n//           </div>\n//         </div>\n//       </motion.div>\n\n//       {/* Main Content */}\n//       <main className=\"flex-grow pt-20 px-6 md:px-12 lg:px-24 max-w-7xl mx-auto w-full\">\n//         {/* Search Bar */}\n//         <div className={`mt-6 flex items-center rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} p-2 shadow-lg`}>\n//           <Search className=\"ml-3 text-gray-400\" size={20} />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search quotes by author...\"\n//             className={`flex-grow py-2 px-4 bg-transparent focus:outline-none ${theme === 'dark' ? 'placeholder-gray-500' : 'placeholder-gray-400'}`}\n//             value={searchQuery}\n//             onChange={(e) => setSearchQuery(e.target.value)}\n//             onKeyPress={handleSearchKeyPress}\n//           />\n//         </div>\n\n//         {/* Categories Scroll */}\n//         <div className=\"mt-6 flex space-x-2 overflow-x-auto pb-2 scrollbar-hide\">\n//           {categories.slice(0, 8).map((category, index) => (\n//             <button\n//               key={index}\n//               onClick={() => handleCategoryClick(category)}\n//               className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap ${\n//                 index === 0 \n//                   ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white' \n//                   : theme === 'dark' ? 'bg-gray-800 hover:bg-gray-700' : 'bg-white hover:bg-gray-100'\n//               }`}\n//             >\n//               {category}\n//             </button>\n//           ))}\n//         </div>\n\n//         {/* Content based on active tab */}\n//         {activeTab === 'discover' ? (\n//           <>\n//             {/* Quote Display */}\n//             <AnimatePresence mode=\"wait\">\n//               <motion.div\n//                 key={quote.content}\n//                 initial={{ opacity: 0, y: 20 }}\n//                 animate={{ opacity: 1, y: 0 }}\n//                 exit={{ opacity: 0, y: -20 }}\n//                 transition={{ duration: 0.5 }}\n//                 className={`mt-12 rounded-2xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} p-8 md:p-12 shadow-xl relative overflow-hidden`}\n//               >\n//                 {isLoading && (\n//                   <div className=\"absolute inset-0 flex items-center justify-center bg-black/30 backdrop-blur-sm z-20\">\n//                     <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\n//                   </div>\n//                 )}\n\n//                 {/* Decorative elements */}\n//                 <div className=\"absolute -top-6 -right-6 w-24 h-24 rounded-full bg-gradient-to-r from-blue-500/20 to-purple-600/20 blur-xl\"></div>\n//                 <div className=\"absolute -bottom-6 -left-6 w-24 h-24 rounded-full bg-gradient-to-r from-purple-600/20 to-blue-500/20 blur-xl\"></div>\n\n//                 <div className=\"relative z-10\">\n//                   <div className=\"text-5xl font-serif text-blue-500 opacity-20\">\"</div>\n//                   <p className=\"text-2xl md:text-3xl font-medium leading-relaxed mt-4\">\n//                     {quote.content}\n//                   </p>\n//                   <div className=\"mt-6 flex items-center\">\n//                     <div className=\"h-10 w-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-600\"></div>\n//                     <p className=\"ml-4 font-medium\">{quote.author}</p>\n//                   </div>\n\n//                   <div className=\"mt-8 flex flex-wrap gap-3\">\n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       onClick={randomizeQuote}\n//                       className=\"p-3 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 text-white\"\n//                     >\n//                       <RefreshCw size={20} />\n//                     </motion.button>\n\n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       onClick={() => toggleFavorite(quote)}\n//                       className={`p-3 rounded-full ${favorites.some(fav => fav.content === quote.content) ? 'bg-pink-500 text-white' : theme === 'dark' ? 'bg-gray-700 text-white' : 'bg-gray-100 text-gray-700'}`}\n//                     >\n//                       <Heart size={20} />\n//                     </motion.button>\n\n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       onClick={copyToClipboard}\n//                       className={`p-3 rounded-full ${theme === 'dark' ? 'bg-gray-700 text-white' : 'bg-gray-100 text-gray-700'}`}\n//                     >\n//                       <Copy size={20} />\n//                     </motion.button>\n\n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       className={`p-3 rounded-full ${theme === 'dark' ? 'bg-gray-700 text-white' : 'bg-gray-100 text-gray-700'}`}\n//                     >\n//                       <Share2 size={20} />\n//                     </motion.button>\n\n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       className={`p-3 rounded-full ${theme === 'dark' ? 'bg-gray-700 text-white' : 'bg-gray-100 text-gray-700'}`}\n//                     >\n//                       <Download size={20} />\n//                     </motion.button>\n//                   </div>\n//                 </div>\n//               </motion.div>\n//             </AnimatePresence>\n\n//             {/* Recommended Quotes */}\n//             <div className=\"mt-12 mb-20\">\n//               <div className=\"flex items-center justify-between mb-6\">\n//                 <h2 className=\"text-xl font-bold\">You may also like</h2>\n//                 <button className=\"text-blue-500 flex items-center\">\n//                   See all <ArrowRight size={16} className=\"ml-1\" />\n//                 </button>\n//               </div>\n\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//                 {recommendedQuotes.map((quote, index) => (\n//                   <motion.div\n//                     key={index}\n//                     whileHover={{ y: -5 }}\n//                     className={`rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} p-6 shadow-lg`}\n//                   >\n//                     <p className=\"text-lg font-medium\">\n//                       {quote.content}\n//                     </p>\n//                     <p className=\"mt-4 text-sm text-gray-500\">\n//                       {quote.author}\n//                     </p>\n//                     <div className=\"mt-4 flex justify-between items-center\">\n//                       <div className=\"flex space-x-2\">\n//                         <button \n//                           onClick={() => toggleFavorite(quote)}\n//                           className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-gray-700' : 'hover:bg-gray-100'}`}\n//                         >\n//                           <Heart size={16} className={favorites.some(fav => fav.content === quote.content) ? 'text-pink-500' : ''} />\n//                         </button>\n//                         <button \n//                           onClick={() => {\n//                             navigator.clipboard.writeText(`\"${quote.content}\" - ${quote.author}`);\n//                             showToastNotification('Quote copied');\n//                           }}\n//                           className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-gray-700' : 'hover:bg-gray-100'}`}\n//                         >\n//                           <Copy size={16} />\n//                         </button>\n//                       </div>\n//                       <button \n//                         onClick={() => setQuote(quote)}\n//                         className=\"text-blue-500 text-sm font-medium\"\n//                       >\n//                         View\n//                       </button>\n//                     </div>\n//                   </motion.div>\n//                 ))}\n//               </div>\n//             </div>\n//           </>\n//         ) : (\n//           // Favorites Tab\n//           <div className=\"mt-8 mb-20\">\n//             <h1 className=\"text-2xl font-bold mb-6\">Your Favorite Quotes</h1>\n\n//             {favorites.length === 0 ? (\n//               <div className={`p-8 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} text-center`}>\n//                 <p className=\"text-gray-500\">You haven't added any favorites yet.</p>\n//                 <button \n//                   onClick={() => setActiveTab('discover')}\n//                   className=\"mt-4 px-6 py-2 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg text-white font-medium\"\n//                 >\n//                   Discover Quotes\n//                 </button>\n//               </div>\n//             ) : (\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//                 {favorites.map((fav, index) => (\n//                   <motion.div\n//                     key={index}\n//                     whileHover={{ y: -5 }}\n//                     className={`rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} p-6 shadow-lg relative overflow-hidden`}\n//                   >\n//                     <div className=\"absolute -top-6 -right-6 w-24 h-24 rounded-full bg-gradient-to-r from-blue-500/10 to-purple-600/10 blur-xl\"></div>\n\n//                     <p className=\"text-lg font-medium relative z-10\">\n//                       {fav.content}\n//                     </p>\n//                     <p className=\"mt-4 text-sm text-gray-500\">\n//                       {fav.author}\n//                     </p>\n//                     <div className=\"mt-4 flex justify-between items-center\">\n//                       <div className=\"flex space-x-2\">\n//                         <button \n//                           onClick={() => toggleFavorite(fav)}\n//                           className=\"p-2 rounded-full text-pink-500\"\n//                         >\n//                           <Heart size={16} />\n//                         </button>\n//                         <button \n//                           onClick={() => {\n//                             navigator.clipboard.writeText(`\"${fav.content}\" - ${fav.author}`);\n//                             showToastNotification('Quote copied');\n//                           }}\n//                           className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-gray-700' : 'hover:bg-gray-100'}`}\n//                         >\n//                           <Copy size={16} />\n//                         </button>\n//                       </div>\n//                       <button \n//                         onClick={() => {\n//                           setQuote(fav);\n//                           setActiveTab('discover');\n//                         }}\n//                         className=\"text-blue-500 text-sm font-medium\"\n//                       >\n//                         View\n//                       </button>\n//                     </div>\n//                   </motion.div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         )}\n//       </main>\n\n//       {/* Add Quote Modal */}\n//       <AnimatePresence>\n//         {isAddingQuote && (\n//           <motion.div\n//             initial={{ opacity: 0 }}\n//             animate={{ opacity: 1 }}\n//             exit={{ opacity: 0 }}\n//             className=\"fixed inset-0 z-30 flex items-center justify-center bg-black/50 backdrop-blur-sm p-4\"\n//           >\n//             <motion.div\n//               initial={{ scale: 0.9, opacity: 0 }}\n//               animate={{ scale: 1, opacity: 1 }}\n//               exit={{ scale: 0.9, opacity: 0 }}\n//               className={`w-full max-w-md ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} rounded-2xl shadow-2xl p-6`}\n//             >\n//               <div className=\"flex justify-between items-center mb-4\">\n//                 <h2 className=\"text-xl font-bold\">Add New Quote</h2>\n//                 <button \n//                   onClick={() => setIsAddingQuote(false)}\n//                   className=\"p-1 rounded-full hover:bg-gray-700/20\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n\n//               <div className=\"space-y-4\">\n//                 <div>\n//                   <label className=\"block text-sm font-medium mb-1.5 text-gray-400\">Quote</label>\n//                   <textarea\n//                     className={`w-full p-3 rounded-lg ${theme === 'dark' ? 'bg-gray-700 focus:bg-gray-700/80' : 'bg-gray-100 focus:bg-white'} focus:outline-none focus:ring-2 focus:ring-blue-500`}\n//                     rows=\"4\"\n//                     placeholder=\"Enter the quote text...\"\n//                     value={newQuote.content}\n//                     onChange={(e) => setNewQuote({...newQuote, content: e.target.value})}\n//                   ></textarea>\n//                 </div>\n\n//                 <div>\n//                   <label className=\"block text-sm font-medium mb-1.5 text-gray-400\">Author</label>\n//                   <input\n//                     type=\"text\"\n//                     className={`w-full p-3 rounded-lg ${theme === 'dark' ? 'bg-gray-700 focus:bg-gray-700/80' : 'bg-gray-100 focus:bg-white'} focus:outline-none focus:ring-2 focus:ring-blue-500`}\n//                     placeholder=\"Who said it?\"\n//                     value={newQuote.author}\n//                     onChange={(e) => setNewQuote({...newQuote, author: e.target.value})}\n//                   />\n//                 </div>\n\n//                 <div>\n//                   <label className=\"block text-sm font-medium mb-1.5 text-gray-400\">Category</label>\n//                   <select\n//                     className={`w-full p-3 rounded-lg ${theme === 'dark' ? 'bg-gray-700 focus:bg-gray-700/80' : 'bg-gray-100 focus:bg-white'} focus:outline-none focus:ring-2 focus:ring-blue-500`}\n//                     value={newQuote.category}\n//                     onChange={(e) => setNewQuote({...newQuote, category: e.target.value})}\n//                   >\n//                     <option value=\"\">Select a category</option>\n//                     {categories.map((category, index) => (\n//                       <option key={index} value={category}>{category}</option>\n//                     ))}\n//                   </select>\n//                 </div>\n//               </div>\n\n//               <div className=\"mt-6 grid grid-cols-2 gap-4\">\n//                 <button\n//                   onClick={() => setIsAddingQuote(false)}\n//                   className={`py-2.5 rounded-lg font-medium ${theme === 'dark' ? 'bg-gray-700 hover:bg-gray-600' : 'bg-gray-200 hover:bg-gray-300'}`}\n//                 >\n//                   Cancel\n//                 </button>\n//                 <button\n//                   onClick={addNewQuote}\n//                   className=\"py-2.5 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg text-white font-medium\"\n//                 >\n//                   Save Quote\n//                 </button>\n//               </div>\n//             </motion.div>\n//           </motion.div>\n//         )}\n//       </AnimatePresence>\n\n//       {/* Toast Notification */}\n//       <AnimatePresence>\n//         {showToast && (\n//           <motion.div\n//             initial={{ opacity: 0, y: 50 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             exit={{ opacity: 0, y: 50 }}\n//             className=\"fixed bottom-6 left-1/2 transform -translate-x-1/2 z-50\"\n//           >\n//             <div className=\"bg-gray-900 text-white px-6 py-3 rounded-full shadow-lg\">\n//               {toastMessage}\n//             </div>\n//           </motion.div>\n//         )}\n//       </AnimatePresence>\n//     </div>\n//   );\n// };\n\n// export default QuoteApp;","map":{"version":3,"names":[],"sources":["E:/Web project/TECHPLEMENT-Quote/frontend/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import { motion, AnimatePresence } from 'framer-motion';\n// import { Search, Heart, RefreshCw, Share2, Download, Moon, Sun, Plus, X, Copy, ArrowRight, Globe } from 'lucide-react';\n\n// // API service for backend communication\n// const API_BASE_URL = 'http://localhost:5000/api';\n\n// const QuoteApp = () => {\n//   const [quote, setQuote] = useState({ content: \"Life isn't about finding yourself. Life is about creating yourself.\", author: \"George Bernard Shaw\" });\n//   const [isMenuOpen, setIsMenuOpen] = useState(false);\n//   const [theme, setTheme] = useState('dark');\n//   const [activeTab, setActiveTab] = useState('discover');\n//   const [favorites, setFavorites] = useState([]);\n//   const [isAddingQuote, setIsAddingQuote] = useState(false);\n//   const [categories, setCategories] = useState(['Inspiration', 'Success', 'Love', 'Wisdom', 'Motivation']);\n//   const [showToast, setShowToast] = useState(false);\n//   const [toastMessage, setToastMessage] = useState('');\n//   const [searchQuery, setSearchQuery] = useState('');\n//   const [recommendedQuotes, setRecommendedQuotes] = useState([]);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [newQuote, setNewQuote] = useState({ content: '', author: '', category: '' });\n\n//   // Load categories from backend on mount\n//   useEffect(() => {\n//     fetchCategories();\n//     fetchRandomQuote();\n//     fetchRecommendedQuotes();\n//     // Load favorites from localStorage\n//     const savedFavorites = localStorage.getItem('favorites');\n//     if (savedFavorites) {\n//       setFavorites(JSON.parse(savedFavorites));\n//     }\n//   }, []);\n\n//   // Save favorites to localStorage whenever they change\n//   useEffect(() => {\n//     localStorage.setItem('favorites', JSON.stringify(favorites));\n//   }, [favorites]);\n\n//   const fetchCategories = async () => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/categories`);\n//       if (response.ok) {\n//         const data = await response.json();\n//         // Extract category names from the API response\n//         const categoryNames = Array.isArray(data) ? \n//           (typeof data[0] === 'string' ? data : data.map(cat => cat.name)) :\n//           ['Inspiration', 'Success', 'Love', 'Wisdom', 'Motivation'];\n//         setCategories(categoryNames);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching categories:', error);\n//     }\n//   };\n\n//   const fetchRandomQuote = async () => {\n//     setIsLoading(true);\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/random-quote`);\n//       if (response.ok) {\n//         const data = await response.json();\n//         setQuote(data);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching random quote:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   const fetchRecommendedQuotes = async () => {\n//     try {\n//       const promises = [1, 2, 3].map(() => fetch(`${API_BASE_URL}/random-quote`).then(res => res.json()));\n//       const results = await Promise.all(promises);\n//       setRecommendedQuotes(results);\n//     } catch (error) {\n//       console.error('Error fetching recommended quotes:', error);\n//     }\n//   };\n\n//   const searchQuotes = async () => {\n//     if (!searchQuery.trim()) return;\n    \n//     try {\n//       const response = await fetch(`${API_BASE_URL}/quote?author=${encodeURIComponent(searchQuery)}`);\n//       if (response.ok) {\n//         const data = await response.json();\n//         if (data && data.length > 0) {\n//           setQuote(data[0]);\n//           if (data.length > 1) {\n//             setRecommendedQuotes(data.slice(1, 4));\n//           }\n//           showToastNotification('Quote found');\n//         } else {\n//           showToastNotification('No quotes found for this author');\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error searching quotes:', error);\n//       showToastNotification('Error searching quotes');\n//     }\n//   };\n\n//   const addNewQuote = async () => {\n//     if (!newQuote.content || !newQuote.author) {\n//       showToastNotification('Quote and author are required');\n//       return;\n//     }\n\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/add-quote`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({\n//           content: newQuote.content,\n//           author: newQuote.author\n//         }),\n//       });\n\n//       if (response.ok) {\n//         const data = await response.json();\n//         setQuote(data);\n//         showToastNotification('Quote added successfully');\n//         setIsAddingQuote(false);\n//         setNewQuote({ content: '', author: '', category: '' });\n//       } else {\n//         showToastNotification('Error adding quote');\n//       }\n//     } catch (error) {\n//       console.error('Error adding quote:', error);\n//       showToastNotification('Error connecting to server');\n//     }\n//   };\n\n//   const toggleTheme = () => {\n//     setTheme(theme === 'dark' ? 'light' : 'dark');\n//   };\n\n//   const toggleFavorite = (quoteObj) => {\n//     const exists = favorites.some(fav => fav.content === quoteObj.content);\n//     if (exists) {\n//       setFavorites(favorites.filter(fav => fav.content !== quoteObj.content));\n//       showToastNotification('Removed from favorites');\n//     } else {\n//       setFavorites([...favorites, quoteObj]);\n//       showToastNotification('Added to favorites');\n//     }\n//   };\n\n//   const randomizeQuote = () => {\n//     fetchRandomQuote();\n//   };\n\n//   const handleCategoryClick = async (category) => {\n//     try {\n//       const response = await fetch(`${API_BASE_URL}/quotes/category/${category}`);\n//       if (response.ok) {\n//         const data = await response.json();\n//         if (data && data.length > 0) {\n//           setQuote(data[0]);\n//           if (data.length > 1) {\n//             setRecommendedQuotes(data.slice(1, 4));\n//           }\n//         }\n//       }\n//     } catch (error) {\n//       console.error('Error fetching quotes by category:', error);\n//     }\n//   };\n\n//   const showToastNotification = (message) => {\n//     setToastMessage(message);\n//     setShowToast(true);\n//     setTimeout(() => setShowToast(false), 2000);\n//   };\n\n//   const copyToClipboard = () => {\n//     navigator.clipboard.writeText(`\"${quote.content}\" - ${quote.author}`);\n//     showToastNotification('Quote copied to clipboard');\n//   };\n\n//   const handleSearchKeyPress = (e) => {\n//     if (e.key === 'Enter') {\n//       searchQuotes();\n//     }\n//   };\n\n//   return (\n//     <div className={`min-h-screen flex flex-col ${theme === 'dark' ? 'bg-gray-900 text-white' : 'bg-gray-50 text-gray-900'}`}>\n//       {/* Animated Gradient Background */}\n//       <div className=\"fixed inset-0 pointer-events-none\">\n//         <div className={`absolute inset-0 opacity-10 ${theme === 'dark' ? 'opacity-20' : 'opacity-10'}`}>\n//           <div className=\"absolute top-0 -left-4 w-72 h-72 bg-purple-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob\"></div>\n//           <div className=\"absolute top-0 -right-4 w-72 h-72 bg-yellow-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-2000\"></div>\n//           <div className=\"absolute -bottom-8 left-20 w-72 h-72 bg-pink-300 rounded-full mix-blend-multiply filter blur-xl opacity-70 animate-blob animation-delay-4000\"></div>\n//         </div>\n//       </div>\n\n//       {/* Header */}\n//       <header className={`fixed w-full z-10 ${theme === 'dark' ? 'bg-gray-900/80' : 'bg-white/80'} backdrop-blur-md py-4 px-6 flex justify-between items-center`}>\n//         <div className=\"flex items-center space-x-2\">\n//           <motion.div \n//             initial={{ rotate: 0 }}\n//             animate={{ rotate: 360 }}\n//             transition={{ duration: 2, repeat: Infinity, repeatType: \"loop\", ease: \"linear\" }}\n//             className=\"h-8 w-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-600\"\n//           ></motion.div>\n//           <h1 className=\"text-xl font-bold bg-gradient-to-r from-blue-500 to-purple-600 bg-clip-text text-transparent\">Quotient</h1>\n//         </div>\n        \n//         <div className=\"flex items-center space-x-4\">\n//           <button onClick={toggleTheme} className=\"p-2 rounded-full hover:bg-gray-800/20\">\n//             {theme === 'dark' ? <Sun size={20} /> : <Moon size={20} />}\n//           </button>\n          \n//           <div \n//             onClick={() => setIsMenuOpen(!isMenuOpen)}\n//             className=\"relative h-10 w-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center cursor-pointer\"\n//           >\n//             <span className=\"text-white font-medium\">JD</span>\n//           </div>\n//         </div>\n//       </header>\n\n//       {/* Side Navigation */}\n//       <motion.div \n//         className={`fixed left-0 bottom-0 top-0 z-20 w-64 ${theme === 'dark' ? 'bg-gray-900/95' : 'bg-white/95'} backdrop-blur-md pt-20 px-4 shadow-xl`}\n//         initial={{ x: \"-100%\" }}\n//         animate={{ x: isMenuOpen ? 0 : \"-100%\" }}\n//         transition={{ type: \"spring\", damping: 20 }}\n//       >\n//         <button \n//           onClick={() => setIsMenuOpen(false)}\n//           className=\"absolute top-6 right-4 p-1 rounded-full hover:bg-gray-800/20\"\n//         >\n//           <X size={20} />\n//         </button>\n        \n//         <div className=\"flex flex-col h-full\">\n//           <div className=\"space-y-1\">\n//             <button \n//               onClick={() => setActiveTab('discover')}\n//               className={`w-full py-2.5 px-4 text-left rounded-lg flex items-center space-x-3 ${activeTab === 'discover' ? 'bg-blue-500/10 text-blue-500' : 'hover:bg-gray-800/10'}`}\n//             >\n//               <Globe size={18} />\n//               <span>Discover</span>\n//             </button>\n//             <button \n//               onClick={() => setActiveTab('favorites')}\n//               className={`w-full py-2.5 px-4 text-left rounded-lg flex items-center space-x-3 ${activeTab === 'favorites' ? 'bg-blue-500/10 text-blue-500' : 'hover:bg-gray-800/10'}`}\n//             >\n//               <Heart size={18} />\n//               <span>Favorites</span>\n//             </button>\n//           </div>\n          \n//           <div className=\"mt-8\">\n//             <h3 className=\"text-xs uppercase text-gray-500 font-semibold mb-2 px-4\">Categories</h3>\n//             <div className=\"space-y-1\">\n//               {categories.map((category, index) => (\n//                 <button \n//                   key={index}\n//                   onClick={() => handleCategoryClick(category)}\n//                   className=\"w-full py-2 px-4 text-left rounded-lg hover:bg-gray-800/10 text-sm\"\n//                 >\n//                   {category}\n//                 </button>\n//               ))}\n//             </div>\n//           </div>\n          \n//           <div className=\"mt-auto pb-8\">\n//             <button \n//               onClick={() => setIsAddingQuote(true)}\n//               className=\"w-full py-2.5 px-4 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg text-white font-medium flex items-center justify-center space-x-2\"\n//             >\n//               <Plus size={18} />\n//               <span>Add Quote</span>\n//             </button>\n//           </div>\n//         </div>\n//       </motion.div>\n\n//       {/* Main Content */}\n//       <main className=\"flex-grow pt-20 px-6 md:px-12 lg:px-24 max-w-7xl mx-auto w-full\">\n//         {/* Search Bar */}\n//         <div className={`mt-6 flex items-center rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} p-2 shadow-lg`}>\n//           <Search className=\"ml-3 text-gray-400\" size={20} />\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search quotes by author...\"\n//             className={`flex-grow py-2 px-4 bg-transparent focus:outline-none ${theme === 'dark' ? 'placeholder-gray-500' : 'placeholder-gray-400'}`}\n//             value={searchQuery}\n//             onChange={(e) => setSearchQuery(e.target.value)}\n//             onKeyPress={handleSearchKeyPress}\n//           />\n//         </div>\n        \n//         {/* Categories Scroll */}\n//         <div className=\"mt-6 flex space-x-2 overflow-x-auto pb-2 scrollbar-hide\">\n//           {categories.slice(0, 8).map((category, index) => (\n//             <button\n//               key={index}\n//               onClick={() => handleCategoryClick(category)}\n//               className={`px-4 py-2 rounded-full text-sm font-medium whitespace-nowrap ${\n//                 index === 0 \n//                   ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white' \n//                   : theme === 'dark' ? 'bg-gray-800 hover:bg-gray-700' : 'bg-white hover:bg-gray-100'\n//               }`}\n//             >\n//               {category}\n//             </button>\n//           ))}\n//         </div>\n        \n//         {/* Content based on active tab */}\n//         {activeTab === 'discover' ? (\n//           <>\n//             {/* Quote Display */}\n//             <AnimatePresence mode=\"wait\">\n//               <motion.div\n//                 key={quote.content}\n//                 initial={{ opacity: 0, y: 20 }}\n//                 animate={{ opacity: 1, y: 0 }}\n//                 exit={{ opacity: 0, y: -20 }}\n//                 transition={{ duration: 0.5 }}\n//                 className={`mt-12 rounded-2xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} p-8 md:p-12 shadow-xl relative overflow-hidden`}\n//               >\n//                 {isLoading && (\n//                   <div className=\"absolute inset-0 flex items-center justify-center bg-black/30 backdrop-blur-sm z-20\">\n//                     <div className=\"w-8 h-8 border-4 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\n//                   </div>\n//                 )}\n                \n//                 {/* Decorative elements */}\n//                 <div className=\"absolute -top-6 -right-6 w-24 h-24 rounded-full bg-gradient-to-r from-blue-500/20 to-purple-600/20 blur-xl\"></div>\n//                 <div className=\"absolute -bottom-6 -left-6 w-24 h-24 rounded-full bg-gradient-to-r from-purple-600/20 to-blue-500/20 blur-xl\"></div>\n                \n//                 <div className=\"relative z-10\">\n//                   <div className=\"text-5xl font-serif text-blue-500 opacity-20\">\"</div>\n//                   <p className=\"text-2xl md:text-3xl font-medium leading-relaxed mt-4\">\n//                     {quote.content}\n//                   </p>\n//                   <div className=\"mt-6 flex items-center\">\n//                     <div className=\"h-10 w-10 rounded-full bg-gradient-to-r from-blue-500 to-purple-600\"></div>\n//                     <p className=\"ml-4 font-medium\">{quote.author}</p>\n//                   </div>\n                  \n//                   <div className=\"mt-8 flex flex-wrap gap-3\">\n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       onClick={randomizeQuote}\n//                       className=\"p-3 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 text-white\"\n//                     >\n//                       <RefreshCw size={20} />\n//                     </motion.button>\n                    \n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       onClick={() => toggleFavorite(quote)}\n//                       className={`p-3 rounded-full ${favorites.some(fav => fav.content === quote.content) ? 'bg-pink-500 text-white' : theme === 'dark' ? 'bg-gray-700 text-white' : 'bg-gray-100 text-gray-700'}`}\n//                     >\n//                       <Heart size={20} />\n//                     </motion.button>\n                    \n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       onClick={copyToClipboard}\n//                       className={`p-3 rounded-full ${theme === 'dark' ? 'bg-gray-700 text-white' : 'bg-gray-100 text-gray-700'}`}\n//                     >\n//                       <Copy size={20} />\n//                     </motion.button>\n                    \n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       className={`p-3 rounded-full ${theme === 'dark' ? 'bg-gray-700 text-white' : 'bg-gray-100 text-gray-700'}`}\n//                     >\n//                       <Share2 size={20} />\n//                     </motion.button>\n                    \n//                     <motion.button \n//                       whileHover={{ scale: 1.05 }}\n//                       whileTap={{ scale: 0.95 }}\n//                       className={`p-3 rounded-full ${theme === 'dark' ? 'bg-gray-700 text-white' : 'bg-gray-100 text-gray-700'}`}\n//                     >\n//                       <Download size={20} />\n//                     </motion.button>\n//                   </div>\n//                 </div>\n//               </motion.div>\n//             </AnimatePresence>\n            \n//             {/* Recommended Quotes */}\n//             <div className=\"mt-12 mb-20\">\n//               <div className=\"flex items-center justify-between mb-6\">\n//                 <h2 className=\"text-xl font-bold\">You may also like</h2>\n//                 <button className=\"text-blue-500 flex items-center\">\n//                   See all <ArrowRight size={16} className=\"ml-1\" />\n//                 </button>\n//               </div>\n              \n//               <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n//                 {recommendedQuotes.map((quote, index) => (\n//                   <motion.div\n//                     key={index}\n//                     whileHover={{ y: -5 }}\n//                     className={`rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} p-6 shadow-lg`}\n//                   >\n//                     <p className=\"text-lg font-medium\">\n//                       {quote.content}\n//                     </p>\n//                     <p className=\"mt-4 text-sm text-gray-500\">\n//                       {quote.author}\n//                     </p>\n//                     <div className=\"mt-4 flex justify-between items-center\">\n//                       <div className=\"flex space-x-2\">\n//                         <button \n//                           onClick={() => toggleFavorite(quote)}\n//                           className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-gray-700' : 'hover:bg-gray-100'}`}\n//                         >\n//                           <Heart size={16} className={favorites.some(fav => fav.content === quote.content) ? 'text-pink-500' : ''} />\n//                         </button>\n//                         <button \n//                           onClick={() => {\n//                             navigator.clipboard.writeText(`\"${quote.content}\" - ${quote.author}`);\n//                             showToastNotification('Quote copied');\n//                           }}\n//                           className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-gray-700' : 'hover:bg-gray-100'}`}\n//                         >\n//                           <Copy size={16} />\n//                         </button>\n//                       </div>\n//                       <button \n//                         onClick={() => setQuote(quote)}\n//                         className=\"text-blue-500 text-sm font-medium\"\n//                       >\n//                         View\n//                       </button>\n//                     </div>\n//                   </motion.div>\n//                 ))}\n//               </div>\n//             </div>\n//           </>\n//         ) : (\n//           // Favorites Tab\n//           <div className=\"mt-8 mb-20\">\n//             <h1 className=\"text-2xl font-bold mb-6\">Your Favorite Quotes</h1>\n            \n//             {favorites.length === 0 ? (\n//               <div className={`p-8 rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} text-center`}>\n//                 <p className=\"text-gray-500\">You haven't added any favorites yet.</p>\n//                 <button \n//                   onClick={() => setActiveTab('discover')}\n//                   className=\"mt-4 px-6 py-2 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg text-white font-medium\"\n//                 >\n//                   Discover Quotes\n//                 </button>\n//               </div>\n//             ) : (\n//               <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n//                 {favorites.map((fav, index) => (\n//                   <motion.div\n//                     key={index}\n//                     whileHover={{ y: -5 }}\n//                     className={`rounded-xl ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} p-6 shadow-lg relative overflow-hidden`}\n//                   >\n//                     <div className=\"absolute -top-6 -right-6 w-24 h-24 rounded-full bg-gradient-to-r from-blue-500/10 to-purple-600/10 blur-xl\"></div>\n                    \n//                     <p className=\"text-lg font-medium relative z-10\">\n//                       {fav.content}\n//                     </p>\n//                     <p className=\"mt-4 text-sm text-gray-500\">\n//                       {fav.author}\n//                     </p>\n//                     <div className=\"mt-4 flex justify-between items-center\">\n//                       <div className=\"flex space-x-2\">\n//                         <button \n//                           onClick={() => toggleFavorite(fav)}\n//                           className=\"p-2 rounded-full text-pink-500\"\n//                         >\n//                           <Heart size={16} />\n//                         </button>\n//                         <button \n//                           onClick={() => {\n//                             navigator.clipboard.writeText(`\"${fav.content}\" - ${fav.author}`);\n//                             showToastNotification('Quote copied');\n//                           }}\n//                           className={`p-2 rounded-full ${theme === 'dark' ? 'hover:bg-gray-700' : 'hover:bg-gray-100'}`}\n//                         >\n//                           <Copy size={16} />\n//                         </button>\n//                       </div>\n//                       <button \n//                         onClick={() => {\n//                           setQuote(fav);\n//                           setActiveTab('discover');\n//                         }}\n//                         className=\"text-blue-500 text-sm font-medium\"\n//                       >\n//                         View\n//                       </button>\n//                     </div>\n//                   </motion.div>\n//                 ))}\n//               </div>\n//             )}\n//           </div>\n//         )}\n//       </main>\n      \n//       {/* Add Quote Modal */}\n//       <AnimatePresence>\n//         {isAddingQuote && (\n//           <motion.div\n//             initial={{ opacity: 0 }}\n//             animate={{ opacity: 1 }}\n//             exit={{ opacity: 0 }}\n//             className=\"fixed inset-0 z-30 flex items-center justify-center bg-black/50 backdrop-blur-sm p-4\"\n//           >\n//             <motion.div\n//               initial={{ scale: 0.9, opacity: 0 }}\n//               animate={{ scale: 1, opacity: 1 }}\n//               exit={{ scale: 0.9, opacity: 0 }}\n//               className={`w-full max-w-md ${theme === 'dark' ? 'bg-gray-800' : 'bg-white'} rounded-2xl shadow-2xl p-6`}\n//             >\n//               <div className=\"flex justify-between items-center mb-4\">\n//                 <h2 className=\"text-xl font-bold\">Add New Quote</h2>\n//                 <button \n//                   onClick={() => setIsAddingQuote(false)}\n//                   className=\"p-1 rounded-full hover:bg-gray-700/20\"\n//                 >\n//                   <X size={20} />\n//                 </button>\n//               </div>\n              \n//               <div className=\"space-y-4\">\n//                 <div>\n//                   <label className=\"block text-sm font-medium mb-1.5 text-gray-400\">Quote</label>\n//                   <textarea\n//                     className={`w-full p-3 rounded-lg ${theme === 'dark' ? 'bg-gray-700 focus:bg-gray-700/80' : 'bg-gray-100 focus:bg-white'} focus:outline-none focus:ring-2 focus:ring-blue-500`}\n//                     rows=\"4\"\n//                     placeholder=\"Enter the quote text...\"\n//                     value={newQuote.content}\n//                     onChange={(e) => setNewQuote({...newQuote, content: e.target.value})}\n//                   ></textarea>\n//                 </div>\n                \n//                 <div>\n//                   <label className=\"block text-sm font-medium mb-1.5 text-gray-400\">Author</label>\n//                   <input\n//                     type=\"text\"\n//                     className={`w-full p-3 rounded-lg ${theme === 'dark' ? 'bg-gray-700 focus:bg-gray-700/80' : 'bg-gray-100 focus:bg-white'} focus:outline-none focus:ring-2 focus:ring-blue-500`}\n//                     placeholder=\"Who said it?\"\n//                     value={newQuote.author}\n//                     onChange={(e) => setNewQuote({...newQuote, author: e.target.value})}\n//                   />\n//                 </div>\n                \n//                 <div>\n//                   <label className=\"block text-sm font-medium mb-1.5 text-gray-400\">Category</label>\n//                   <select\n//                     className={`w-full p-3 rounded-lg ${theme === 'dark' ? 'bg-gray-700 focus:bg-gray-700/80' : 'bg-gray-100 focus:bg-white'} focus:outline-none focus:ring-2 focus:ring-blue-500`}\n//                     value={newQuote.category}\n//                     onChange={(e) => setNewQuote({...newQuote, category: e.target.value})}\n//                   >\n//                     <option value=\"\">Select a category</option>\n//                     {categories.map((category, index) => (\n//                       <option key={index} value={category}>{category}</option>\n//                     ))}\n//                   </select>\n//                 </div>\n//               </div>\n              \n//               <div className=\"mt-6 grid grid-cols-2 gap-4\">\n//                 <button\n//                   onClick={() => setIsAddingQuote(false)}\n//                   className={`py-2.5 rounded-lg font-medium ${theme === 'dark' ? 'bg-gray-700 hover:bg-gray-600' : 'bg-gray-200 hover:bg-gray-300'}`}\n//                 >\n//                   Cancel\n//                 </button>\n//                 <button\n//                   onClick={addNewQuote}\n//                   className=\"py-2.5 bg-gradient-to-r from-blue-500 to-purple-600 rounded-lg text-white font-medium\"\n//                 >\n//                   Save Quote\n//                 </button>\n//               </div>\n//             </motion.div>\n//           </motion.div>\n//         )}\n//       </AnimatePresence>\n      \n//       {/* Toast Notification */}\n//       <AnimatePresence>\n//         {showToast && (\n//           <motion.div\n//             initial={{ opacity: 0, y: 50 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             exit={{ opacity: 0, y: 50 }}\n//             className=\"fixed bottom-6 left-1/2 transform -translate-x-1/2 z-50\"\n//           >\n//             <div className=\"bg-gray-900 text-white px-6 py-3 rounded-full shadow-lg\">\n//               {toastMessage}\n//             </div>\n//           </motion.div>\n//         )}\n//       </AnimatePresence>\n//     </div>\n//   );\n// };\n\n// export default QuoteApp;\n\n\n\n\n\n\n\n\n\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}